{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class GlobalService {\n  constructor() {\n    this.logEntriesSubject = new BehaviorSubject([]);\n    this.logEntries$ = this.logEntriesSubject.asObservable();\n    this.questions = [{\n      \"question\": \"Les insectes sont les appareils biologiques les plus abondants sur la planète?\",\n      \"answer\": false\n    }, {\n      \"question\": \"La biodiversité menace particulièrement l'avenir de la planète?\",\n      \"answer\": true\n    }, {\n      \"question\": \"Les espèces qui cohabitent dans un écosystème dépendent les unes des autres pour leur survie, c'est ce qu'on appelle la \\\"coopération\\\" écologique.\",\n      \"answer\": false\n    }, {\n      \"question\": \"Les forêts tropicales sont-elles les régions les plus pollueuses de la planète?\",\n      \"answer\": false\n    }, {\n      \"question\": \"Lors de la décomposition d'une feuille, la microbiote bénéficie de la présence d'oxygène pour métaboliser efficacement les molécules organiques.\",\n      \"answer\": false\n    }, {\n      \"question\": \"L'étude de la biomasse est essentielle pour évaluer l'état de santé d'un écosystème.\",\n      \"answer\": true\n    }, {\n      \"question\": \"Les écosystèmes sont particulièrement vulnérables aux changements climatiques.\",\n      \"answer\": true\n    }, {\n      \"question\": \"L'aire de répartition de l'ours brun (Ursus arctos) est en constante augmentation dans les dernières années en raison de sa résilience et de la préservation des habitats.\",\n      \"answer\": false\n    }, {\n      \"question\": \"Les termes \\\"écologie\\\" et \\\"biologie\\\" sont synonymes?\",\n      \"answer\": false\n    }, {\n      \"question\": \"La pollution par le plastique a un impact négatif sur les écosystèmes marins.\",\n      \"answer\": true\n    }];\n  }\n  getRandomQuestions(num) {\n    return this.questions.sort(() => 0.5 - Math.random()).slice(0, num);\n  }\n  addLogEntry() {\n    const logEntries = this.logEntriesSubject.value;\n    const newLogEntry = {\n      id: logEntries.length,\n      moving: false\n    };\n    logEntries.push(newLogEntry);\n    this.logEntriesSubject.next(logEntries);\n    setTimeout(() => this.moveLogEntry(newLogEntry.id), 100);\n  }\n  moveLogEntry(id) {\n    const logEntries = this.logEntriesSubject.value.map(logEntry => logEntry.id === id ? {\n      ...logEntry,\n      moving: true\n    } : logEntry);\n    this.logEntriesSubject.next(logEntries);\n  }\n  static #_ = this.ɵfac = function GlobalService_Factory(t) {\n    return new (t || GlobalService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GlobalService,\n    factory: GlobalService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","GlobalService","constructor","logEntriesSubject","logEntries$","asObservable","questions","getRandomQuestions","num","sort","Math","random","slice","addLogEntry","logEntries","value","newLogEntry","id","length","moving","push","next","setTimeout","moveLogEntry","map","logEntry","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/anassi/Desktop/Epitech/Beaver-Builders/src/app/services/global.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  private logEntriesSubject = new BehaviorSubject<{ id: number, moving: boolean }[]>([]);\n  logEntries$ = this.logEntriesSubject.asObservable();\n\n  private questions = [\n    {\n      \"question\": \"Les insectes sont les appareils biologiques les plus abondants sur la planète?\",\n      \"answer\": false\n    },\n    {\n      \"question\": \"La biodiversité menace particulièrement l'avenir de la planète?\",\n      \"answer\": true\n    },\n    {\n      \"question\": \"Les espèces qui cohabitent dans un écosystème dépendent les unes des autres pour leur survie, c'est ce qu'on appelle la \\\"coopération\\\" écologique.\",\n      \"answer\": false\n    },\n    {\n      \"question\": \"Les forêts tropicales sont-elles les régions les plus pollueuses de la planète?\",\n      \"answer\": false\n    },\n    {\n      \"question\": \"Lors de la décomposition d'une feuille, la microbiote bénéficie de la présence d'oxygène pour métaboliser efficacement les molécules organiques.\",\n      \"answer\": false\n    },\n    {\n      \"question\": \"L'étude de la biomasse est essentielle pour évaluer l'état de santé d'un écosystème.\",\n      \"answer\": true\n    },\n    {\n      \"question\": \"Les écosystèmes sont particulièrement vulnérables aux changements climatiques.\",\n      \"answer\": true\n    },\n    {\n      \"question\": \"L'aire de répartition de l'ours brun (Ursus arctos) est en constante augmentation dans les dernières années en raison de sa résilience et de la préservation des habitats.\",\n      \"answer\": false\n    },\n    {\n      \"question\": \"Les termes \\\"écologie\\\" et \\\"biologie\\\" sont synonymes?\",\n      \"answer\": false\n    },\n    {\n      \"question\": \"La pollution par le plastique a un impact négatif sur les écosystèmes marins.\",\n      \"answer\": true\n    }\n  ];\n\n  constructor() { }\n\n  getRandomQuestions(num: number) {\n    return this.questions.sort(() => 0.5 - Math.random()).slice(0, num);\n  }\n\n  addLogEntry() {\n    const logEntries = this.logEntriesSubject.value;\n    const newLogEntry = { id: logEntries.length, moving: false };\n    logEntries.push(newLogEntry);\n    this.logEntriesSubject.next(logEntries);\n    setTimeout(() => this.moveLogEntry(newLogEntry.id), 100);\n  }\n\n  private moveLogEntry(id: number) {\n    const logEntries = this.logEntriesSubject.value.map(logEntry => \n      logEntry.id === id ? { ...logEntry, moving: true } : logEntry\n    );\n    this.logEntriesSubject.next(logEntries);\n  }\n\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,aAAa;EAgDxBC,YAAA;IA9CQ,KAAAC,iBAAiB,GAAG,IAAIH,eAAe,CAAoC,EAAE,CAAC;IACtF,KAAAI,WAAW,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;IAE3C,KAAAC,SAAS,GAAG,CAClB;MACE,UAAU,EAAE,gFAAgF;MAC5F,QAAQ,EAAE;KACX,EACD;MACE,UAAU,EAAE,iEAAiE;MAC7E,QAAQ,EAAE;KACX,EACD;MACE,UAAU,EAAE,qJAAqJ;MACjK,QAAQ,EAAE;KACX,EACD;MACE,UAAU,EAAE,iFAAiF;MAC7F,QAAQ,EAAE;KACX,EACD;MACE,UAAU,EAAE,kJAAkJ;MAC9J,QAAQ,EAAE;KACX,EACD;MACE,UAAU,EAAE,sFAAsF;MAClG,QAAQ,EAAE;KACX,EACD;MACE,UAAU,EAAE,gFAAgF;MAC5F,QAAQ,EAAE;KACX,EACD;MACE,UAAU,EAAE,4KAA4K;MACxL,QAAQ,EAAE;KACX,EACD;MACE,UAAU,EAAE,yDAAyD;MACrE,QAAQ,EAAE;KACX,EACD;MACE,UAAU,EAAE,+EAA+E;MAC3F,QAAQ,EAAE;KACX,CACF;EAEe;EAEhBC,kBAAkBA,CAACC,GAAW;IAC5B,OAAO,IAAI,CAACF,SAAS,CAACG,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,EAAEJ,GAAG,CAAC;EACrE;EAEAK,WAAWA,CAAA;IACT,MAAMC,UAAU,GAAG,IAAI,CAACX,iBAAiB,CAACY,KAAK;IAC/C,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAEH,UAAU,CAACI,MAAM;MAAEC,MAAM,EAAE;IAAK,CAAE;IAC5DL,UAAU,CAACM,IAAI,CAACJ,WAAW,CAAC;IAC5B,IAAI,CAACb,iBAAiB,CAACkB,IAAI,CAACP,UAAU,CAAC;IACvCQ,UAAU,CAAC,MAAM,IAAI,CAACC,YAAY,CAACP,WAAW,CAACC,EAAE,CAAC,EAAE,GAAG,CAAC;EAC1D;EAEQM,YAAYA,CAACN,EAAU;IAC7B,MAAMH,UAAU,GAAG,IAAI,CAACX,iBAAiB,CAACY,KAAK,CAACS,GAAG,CAACC,QAAQ,IAC1DA,QAAQ,CAACR,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGQ,QAAQ;MAAEN,MAAM,EAAE;IAAI,CAAE,GAAGM,QAAQ,CAC9D;IACD,IAAI,CAACtB,iBAAiB,CAACkB,IAAI,CAACP,UAAU,CAAC;EACzC;EAAC,QAAAY,CAAA,G;qBAnEUzB,aAAa;EAAA;EAAA,QAAA0B,EAAA,G;WAAb1B,aAAa;IAAA2B,OAAA,EAAb3B,aAAa,CAAA4B,IAAA;IAAAC,UAAA,EAFZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}